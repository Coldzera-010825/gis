{"version":2,"kind":"Notebook","sha256":"3886337c7ae7976c812728c735fe26f95748d8df872517952c9177b5bbfae3e3","slug":"shp2tif-workflow","location":"/geoprocessing_code/geocode/shp2tif_workflow.ipynb","dependencies":[],"frontmatter":{"title":"Shapefile ➜ Float32 GeoTIFF (DEPTH2D) — Interactive + Batch","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"numbering":{"title":{"offset":2}},"exports":[{"format":"ipynb","filename":"shp2tif_workflow.ipynb","url":"/shp2tif_workflow-427d61e0f43f9e50c3c56d180b56e848.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This notebook ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VgGwq1f9kf"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"batch‑converts every ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kyUbj3sfXr"},{"type":"inlineCode","value":".shp","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WLc9qTov5r"},{"type":"text","value":" file beneath a chosen root directory into GeoTIFF rasters","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LSJAT6szag"}],"key":"kJeCjfKawu"},{"type":"text","value":" while:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qFeE2wPtkg"}],"key":"iFAkzKbFaP"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"repairing invalid geometries to avoid artefacts (e.g., stray horizontal lines);","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VUGWkljX7M"}],"key":"CHg744Putt"}],"key":"nGEziArDf2"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"ensuring the output raster is ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xBXL3p1gCH"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"≤ 4096 × 4096","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Ihv8aY8Zcv"}],"key":"CauLzcpIRM"},{"type":"text","value":" pixels (adjusting pixel size if necessary; default target ≈ ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xB6gud4qaU"},{"type":"inlineCode","value":"0.00001","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ZknbvHWX3N"},{"type":"text","value":" degree);","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"lGNFcOiuGx"}],"key":"mmADVwn3GJ"}],"key":"GSGAkaDqst"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"saving each GeoTIFF inside a sibling ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sOUHPNk5hs"},{"type":"inlineCode","value":"tif/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Tj7HQIChn7"},{"type":"text","value":" folder alongside its source shapefile;","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"XgDoBbcTd6"}],"key":"J3FjTzskrH"}],"key":"P8KB3BsSTZ"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"writing a quick‑look ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"cBL991VQSW"},{"type":"emphasis","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"PNG","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ll9AkHzPts"}],"key":"D3yZNsgJo5"},{"type":"text","value":" overlay (shapefile boundary + raster) for visual QA.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"C4VdTIn5uq"}],"key":"UEtQMytB4D"}],"key":"wPZ7iK0Lqb"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Interactive single‑file test","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"b9lkGD0KU1"}],"key":"GqmlMRqyw3"},{"type":"text","value":" – preview one ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"jzEcDVPG87"},{"type":"inlineCode","value":".shp","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"sySXNDwEW8"},{"type":"text","value":" as a raster overlay without saving.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"qVxvgbbaia"}],"key":"db8tNrULnN"}],"key":"MeS4TNxD2b"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Batch conversion","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"rERCx2opHB"}],"key":"z7SLLI2sJy"},{"type":"text","value":" – scan timestamp‑named folders, convert each contained shapefile to 32‑bit float GeoTIFF (","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"oeZfXw98w1"},{"type":"inlineCode","value":"DEPTH2D","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"KtDwMoW8Tn"},{"type":"text","value":" band) named ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"wJcDlXObZh"},{"type":"inlineCode","value":"<timestamp>_<frame>.tif","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"eGvguSkrfK"},{"type":"text","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"eJ3Fkh00JI"}],"key":"ERVMsKWTXz"}],"key":"TeVupZi95k"}],"key":"QMxEQmMY4k"},{"type":"blockquote","position":{"start":{"line":12,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Dependencies","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"mACwvdqyDJ"}],"key":"R77yuKCQJd"}],"key":"tIcVcnVh8v"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"GeoPandas ≥ 0.14","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"UgVxQdnK6T"}],"key":"K2APF7e3RP"}],"key":"OwSHAh72Rp"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Shapely ≥ 2.0","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"alR9IB2g2A"}],"key":"hZiBiEa39o"}],"key":"cvbBr6t7Yz"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Rasterio ≥ 1.3","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"doUVRyUaKm"}],"key":"mQXsczVM5Z"}],"key":"JTujkR6qru"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Matplotlib","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ALFYJyb7Bj"}],"key":"p0sOWop4Hm"}],"key":"EUIQMJQzk5"}],"key":"C85tJ7dCKc"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Install (conda):","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"OpU2i8CT8z"}],"key":"dPmXyPa39r"},{"type":"code","lang":"bash","value":"conda create -n gis python=3.11 geopandas rasterio matplotlib -c conda-forge\nconda activate gis","position":{"start":{"line":19,"column":1},"end":{"line":22,"column":1}},"key":"lq1lUIzjaf"}],"key":"ALnsZzmn9F"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"All outputs limited to ≤ 4096×4096 pixels; overlapping polygons merged with ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"cI61m8OjsO"},{"type":"emphasis","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"max","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"OblUpkKlK4"}],"key":"T1xc4UKQlw"},{"type":"text","value":" DEPTH2D; ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"PTPdtCd84D"},{"type":"inlineCode","value":"nodata=-9999","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"wHbx3z8Uta"},{"type":"text","value":".","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"Wlsc3j463y"}],"key":"vwAkGCdPdG"}],"key":"BXm1QoxpPK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import warnings, math\nfrom pathlib import Path\nimport geopandas as gpd\nfrom shapely import make_valid\nimport rasterio\nfrom rasterio.transform import from_origin\nfrom rasterio.features import rasterize\nfrom rasterio.enums import MergeAlg\nimport matplotlib.pyplot as plt\n","key":"YP42myUYhW"},{"type":"output","id":"zISfZc-LSk1idnGT0HXoi","data":[],"key":"EuAaPukBPM"}],"key":"fofKXKRQc1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Configure I/O Paths","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ss5OyQRgC5"}],"identifier":"configure-i-o-paths","label":"Configure I/O Paths","html_id":"configure-i-o-paths","implicit":true,"key":"WlIwCS1ViK"}],"key":"cnSuE6taAE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# SINGLE TEST\ntest_shp = Path(r'D:/gis/single_test/one.shp')   # change\n\n# BATCH\nbatch_root   = Path(r'D:/gis/batch_root')        # each sub‑folder = timestamp\nbatch_output = Path(r'D:/gis/tif_output')\nbatch_output.mkdir(parents=True, exist_ok=True)\n\nprint('Batch root :', batch_root.resolve())\nprint('Output root:', batch_output.resolve())\n","key":"GuFe7iwAyf"},{"type":"output","id":"vepUOXycPSpbxQYlkMgAc","data":[],"key":"Npj2KZskw0"}],"key":"cl3ab7tUqB"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nltTwIyjZg"}],"identifier":"parameters","label":"Parameters","html_id":"parameters","implicit":true,"key":"kHSOlrXcPC"}],"key":"Ye9QcmtfL1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"PIXEL_LIMIT     = 4096\nPIXEL_SIZE_FINE = 1e-5    # deg pls defined by yourself\nNODATA          = -9999.0\n#MERGE_STRATEGY  = 'max'   # max/min/first\nFRAME_FIELD     = 'FRAME' # attribute for frame number\n","key":"Vjr2rqx73e"},{"type":"output","id":"FqqkOu27frmR4u-6o_SyJ","data":[],"key":"PGO5SDvBTW"}],"key":"CJPcGhRUDx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Utilities","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f8o9WwKJby"}],"identifier":"utilities","label":"Utilities","html_id":"utilities","implicit":true,"key":"QmffNEVMAM"}],"key":"la3XDUY8rE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def repair(gdf):\n    def _f(geom):\n        if geom is None or geom.is_empty:\n            return None\n        if not geom.is_valid:\n            try:\n                return make_valid(geom)\n            except Exception:\n                return geom.buffer(0)\n        return geom\n    gdf['geometry'] = gdf.geometry.apply(_f)\n    return gdf[~gdf.geometry.is_empty & gdf.geometry.notnull()]\n\ndef choose_px(bounds):\n    minx, miny, maxx, maxy = bounds\n    dx, dy = maxx - minx, maxy - miny\n    if dx/PIXEL_SIZE_FINE <= PIXEL_LIMIT and dy/PIXEL_SIZE_FINE <= PIXEL_LIMIT:\n        return PIXEL_SIZE_FINE\n    px = max(dx, dy)/PIXEL_LIMIT\n    if px > PIXEL_SIZE_FINE:\n        warnings.warn(f'Pixel size relaxed to {px:.6f}')\n    return px\n\ndef rasterize_depth(gdf):\n    minx, miny, maxx, maxy = gdf.total_bounds\n    px = choose_px((minx, miny, maxx, maxy))\n    width  = math.ceil((maxx - minx)/px)\n    height = math.ceil((maxy - miny)/px)\n    transform = from_origin(minx, maxy, px, px)\n\n    shapes = ((row.geometry, float(row['DEPTH2D'])) for _, row in gdf.iterrows())\n    arr = rasterize(shapes, out_shape=(height, width),\n                    fill=NODATA, dtype='float32',\n                    transform=transform)\n    return arr, transform\n","key":"yQ5E3Y8iu3"},{"type":"output","id":"GzqyFWaKtYo-aSLM7unAQ","data":[],"key":"sFv7nIvvd0"}],"key":"JYlDPcqfMB"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"1  Interactive Preview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dAbSwFfeAm"}],"identifier":"id-1-interactive-preview","label":"1  Interactive Preview","html_id":"id-1-interactive-preview","implicit":true,"key":"GrVmtaVelj"}],"key":"ObeE7ncmX6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"if test_shp.exists():\n    gdf = gpd.read_file(test_shp)\n    if 'DEPTH2D' not in gdf.columns:\n        raise KeyError('DEPTH2D missing')\n    gdf = repair(gdf)\n    arr, transform = rasterize_depth(gdf)\n\n    minx, miny, maxx, maxy = gdf.total_bounds\n    fig, ax = plt.subplots(figsize=(6,6))\n    im = ax.imshow(arr, extent=[minx,maxx,miny,maxy], origin='upper', cmap='viridis', alpha=0.6)\n    gdf.boundary.plot(ax=ax, edgecolor='white', linewidth=0.4)\n    plt.colorbar(im, ax=ax, fraction=0.022, pad=0.01, label='DEPTH2D')\n    ax.set_axis_off()\n    plt.show()\nelse:\n    print('Set `test_shp` path to an existing shapefile for preview.')\n","key":"c82Zn9XgRt"},{"type":"output","id":"uyF9LmiklYrEEOmLa7mYE","data":[],"key":"SYeh19pvoH"}],"key":"JFWyBdpARO"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2  Batch Conversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GXdR5WGIbZ"}],"identifier":"id-2-batch-conversion","label":"2  Batch Conversion","html_id":"id-2-batch-conversion","implicit":true,"key":"N8Vd4hFDqY"}],"key":"e649ouim82"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"folders = [p for p in batch_root.iterdir() if p.is_dir()]\nprint(f'Folders found: {len(folders)}')\n\nfor ts_dir in folders:\n    timestamp = ts_dir.name\n    shp_paths = list(ts_dir.glob('*.shp'))\n    if not shp_paths:\n        print(f'[SKIP] {timestamp}: no shp')\n        continue\n    shp_path = shp_paths[0]\n\n    try:\n        gdf = gpd.read_file(shp_path)\n        if 'DEPTH2D' not in gdf.columns:\n            print(f'[SKIP] {shp_path.name}: DEPTH2D missing')\n            continue\n        gdf = repair(gdf)\n        frame_val = (str(gdf[FRAME_FIELD].dropna().iloc[0])\n                     if FRAME_FIELD in gdf.columns and not gdf[FRAME_FIELD].dropna().empty\n                     else shp_path.stem)\n        arr, transform = rasterize_depth(gdf)\n        out_tif = batch_output / f'{timestamp}_{frame_val}.tif'\n\n        meta = dict(driver='GTiff',\n                    height=arr.shape[0], width=arr.shape[1],\n                    count=1, dtype='float32', transform=transform,\n                    crs=gdf.crs, nodata=NODATA)\n\n        with rasterio.open(out_tif, 'w', **meta) as dst:\n            dst.write(arr, 1)\n\n        print(f'[OK] {timestamp}/{shp_path.name} → {out_tif.name}')\n    except Exception as e:\n        print(f'[ERR] {shp_path}: {e}')\n","key":"IbNFTGd4dY"},{"type":"output","id":"kJQ1UlU8xfG_VQ3K9CF1n","data":[],"key":"l2gp6kForG"}],"key":"AwfrPvi28J"}],"key":"YXIPHYK3I1"},"references":{"cite":{"order":[],"data":{}}}}